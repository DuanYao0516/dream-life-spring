<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hellospring.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.hellospring.entity.User">
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!-- Insert a new user -->
    <insert id="insert" parameterType="com.example.hellospring.entity.User">
        INSERT INTO users (user_name, password, nickname, email)
        VALUES (#{userName}, #{password}, #{nickname}, #{email})
    </insert>

    <!-- Login by username and password -->
    <select id="login" parameterType="String" resultMap="BaseResultMap">
        SELECT * FROM users WHERE user_name = #{userName} AND password = #{password}
    </select>

    <!-- Select user by primary key -->
    <select id="selectByPrimaryKey" parameterType="Long" resultType="com.example.hellospring.entity.User" resultMap="BaseResultMap">
        SELECT * FROM users WHERE user_id = #{id}
    </select>

    <!-- Update user by primary key -->
    <update id="updateByPrimaryKey" parameterType="com.example.hellospring.entity.User">
        UPDATE users SET
                         user_name = #{userName},
                         password = #{password},
                         nickname = #{nickname},
                         email = #{email}
        WHERE user_id = #{userId}
    </update>

    <!-- Update user by primary key selectively -->
    <update id="updateByPrimaryKeySelective" parameterType="com.example.hellospring.entity.User">
        UPDATE users SET
        <set>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
        </set>
        WHERE user_id = #{userId}
    </update>

<!--    int checkUsernameOrEmail(@Param("userName") String userName, @Param("email") String email);-->
    <select id="checkUsernameOrEmail" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_name = #{userName} OR email = #{email}
    </select>

    <select id="getUserById" resultType="com.example.hellospring.entity.User">
        SELECT * FROM users WHERE user_id = #{userId}
    </select>

    <update id="updateName">
        UPDATE users SET user_name = #{loginUserName}, nickname = #{nickName} WHERE user_id = #{userId}
    </update>

    <update id="updatePassword">
        UPDATE users SET password = #{newPassword} WHERE user_id = #{userId}
    </update>

    <select id="getTopUsersByBlogCount" resultMap="BaseResultMap">
        SELECT u.user_id, u.user_name, COUNT(b.blog_id) AS blog_count
        FROM users u
        JOIN blog b ON u.user_id = b.user_id
        GROUP BY u.user_id, u.user_name
        ORDER BY blog_count DESC
        LIMIT 10
    </select>

<!--    <select id="findByEmail" resultType="com.example.hellospring.entity.User">-->
<!--        SELECT * FROM users WHERE email = #{email}-->
<!--    </select>-->

<!--    <update id="retrievePassword">-->
<!--        UPDATE users SET password = #{newPassword} WHERE user_id = #{userId}-->
<!--    </update>-->


</mapper>